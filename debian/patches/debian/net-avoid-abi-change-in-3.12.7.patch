From: Ben Hutchings <ben@decadent.org.uk
Date: Thu, 16 Jan 2014 07:35:38 +0000
Subject: net: Avoid ABI change in 3.12.7
Forwarded: not-needed

CONFIG_NET_DMA has been disabled as it can lead to data loss and
isn't going to be fixed.

To avoid an ABI change, keep defining the various structure members
that support it.


--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -492,10 +492,10 @@ struct sk_buff {
 	/* 6/8 bit hole (depending on ndisc_nodetype presence) */
 	kmemcheck_bitfield_end(flags2);
 
-#if defined CONFIG_NET_DMA || defined CONFIG_NET_RX_BUSY_POLL
+#if defined CONFIG_NET_DMA_DUMMY || defined CONFIG_NET_RX_BUSY_POLL
 	union {
 		unsigned int	napi_id;
-		dma_cookie_t	dma_cookie;
+		dma_cookie_t	dma_cookie; /* now unused */
 	};
 #endif
 #ifdef CONFIG_NETWORK_SECMARK
--- a/include/linux/tcp.h
+++ b/include/linux/tcp.h
@@ -169,8 +169,8 @@ struct tcp_sock {
 		struct iovec		*iov;
 		int			memory;
 		int			len;
-#ifdef CONFIG_NET_DMA
-		/* members for async copy */
+#ifdef CONFIG_NET_DMA_DUMMY
+		/* members for async copy, now unused */
 		struct dma_chan		*dma_chan;
 		int			wakeup;
 		struct dma_pinned_list	*pinned_list;
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -338,8 +338,8 @@ struct sock {
 	struct sk_filter __rcu	*sk_filter;
 	struct socket_wq __rcu	*sk_wq;
 
-#ifdef CONFIG_NET_DMA
-	struct sk_buff_head	sk_async_wait_queue;
+#ifdef CONFIG_NET_DMA_DUMMY
+	struct sk_buff_head	sk_async_wait_queue; /* now unused */
 #endif
 
 #ifdef CONFIG_XFRM
--- a/drivers/dma/Kconfig
+++ b/drivers/dma/Kconfig
@@ -347,6 +347,11 @@ config NET_DMA
 	  Say Y here if you enabled INTEL_IOATDMA or FSL_DMA, otherwise
 	  say N.
 
+config NET_DMA_DUMMY
+	bool
+	depends on DMA_ENGINE && NET
+	default (INTEL_IOATDMA || FSL_DMA)
+
 config ASYNC_TX_DMA
 	bool "Async_tx: Offload support for the async_tx api"
 	depends on DMA_ENGINE
