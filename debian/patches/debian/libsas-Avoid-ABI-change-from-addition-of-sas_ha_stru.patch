From: Ben Hutchings <ben@decadent.org.uk>
Date: Wed, 21 Dec 2011 06:01:51 +0000
Subject: [PATCH 3/5] libsas: Avoid ABI change from addition of
 sas_ha_struct::strict_wide_ports

This structure is allocated by drivers, so we cannot extend it.
However, the private 'state' field takes up at least 4 bytes but only
requires 1 bit, and the 'strict_wide_ports' field also only requires 1
bit.  Change each of them to u8 and fit the 'strict_wide_ports' field
into the spare bytes.
---
 include/scsi/libsas.h |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/include/scsi/libsas.h b/include/scsi/libsas.h
index c464e93..bee9229 100644
--- a/include/scsi/libsas.h
+++ b/include/scsi/libsas.h
@@ -338,7 +338,14 @@ struct sas_ha_struct {
 	struct sas_ha_event ha_events[HA_NUM_EVENTS];
 	unsigned long	 pending;
 
+#ifdef __GENKSYMS__
 	enum sas_ha_state state;
+#else
+	u8 state;
+	u8 strict_wide_ports;  /* both sas_addr and attached_sas_addr must match
+				* their siblings when forming wide ports */
+	u8 pad[2];
+#endif
 	spinlock_t 	  state_lock;
 
 	struct scsi_core core;
@@ -359,8 +366,6 @@ struct sas_ha_struct {
 	/* The class calls this to send a task for execution. */
 	int lldd_max_execute_num;
 	int lldd_queue_size;
-	int strict_wide_ports; /* both sas_addr and attached_sas_addr must match
-				* their siblings when forming wide ports */
 
 	/* LLDD calls these to notify the class of an event. */
 	void (*notify_ha_event)(struct sas_ha_struct *, enum ha_event);
-- 
1.7.7.3

