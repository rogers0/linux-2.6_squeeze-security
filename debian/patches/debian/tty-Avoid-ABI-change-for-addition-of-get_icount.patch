From: Ben Hutchings <ben@decadent.org.uk>
Date: Sun, 16 Jan 2011 04:59:20 +0000
Subject: [PATCH 4/4] tty: Avoid ABI change for addition of tty_operations::get_icount etc.

Move tty_operations::get_icount to the end of the structures, guarded
by #ifndef __GENKSYMS__.  Define a new flag in tty_driver::flags
indicating whether ops->get_icount is valid; set and test it as
needed.

Delete usb_serial_driver::get_icount as unused.  The in-tree USB
serial drivers that implement SIOCGICOUNT do not appear to leak
information.

Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
---
 drivers/char/amiserial.c          |    1 +
 drivers/char/cyclades.c           |    1 +
 drivers/char/ip2/ip2main.c        |    1 +
 drivers/char/mxser.c              |    1 +
 drivers/char/nozomi.c             |    1 +
 drivers/char/pcmcia/synclink_cs.c |    1 +
 drivers/char/synclink.c           |    1 +
 drivers/char/synclink_gt.c        |    1 +
 drivers/char/synclinkmp.c         |    1 +
 drivers/char/tty_io.c             |    3 ++-
 drivers/serial/68360serial.c      |    1 +
 drivers/usb/serial/usb-serial.c   |   13 -------------
 include/linux/tty_driver.h        |   10 ++++++++--
 include/linux/usb/serial.h        |    2 --
 14 files changed, 20 insertions(+), 18 deletions(-)

diff --git a/drivers/char/amiserial.c b/drivers/char/amiserial.c
index 579d479..9e144f6 100644
--- a/drivers/char/amiserial.c
+++ b/drivers/char/amiserial.c
@@ -2001,6 +2001,7 @@ static int __init rs_init(void)
 		B9600 | CS8 | CREAD | HUPCL | CLOCAL;
 	serial_driver->flags = TTY_DRIVER_REAL_RAW;
 	tty_set_operations(serial_driver, &serial_ops);
+	serial_driver->flags |= TTY_DRIVER_HAS_GET_ICOUNT;
 
 	error = tty_register_driver(serial_driver);
 	if (error)
diff --git a/drivers/char/cyclades.c b/drivers/char/cyclades.c
index eb863de..2be2ba4 100644
--- a/drivers/char/cyclades.c
+++ b/drivers/char/cyclades.c
@@ -4130,6 +4130,7 @@ static int __init cy_init(void)
 	    B9600 | CS8 | CREAD | HUPCL | CLOCAL;
 	cy_serial_driver->flags = TTY_DRIVER_REAL_RAW | TTY_DRIVER_DYNAMIC_DEV;
 	tty_set_operations(cy_serial_driver, &cy_ops);
+	cy_serial_driver->flags |= TTY_DRIVER_HAS_GET_ICOUNT;
 
 	retval = tty_register_driver(cy_serial_driver);
 	if (retval) {
diff --git a/drivers/char/ip2/ip2main.c b/drivers/char/ip2/ip2main.c
index e04c1d3..4879c7a 100644
--- a/drivers/char/ip2/ip2main.c
+++ b/drivers/char/ip2/ip2main.c
@@ -709,6 +709,7 @@ static int __init ip2_loadmain(void)
 	ip2_tty_driver->flags                = TTY_DRIVER_REAL_RAW |
 		TTY_DRIVER_DYNAMIC_DEV;
 	tty_set_operations(ip2_tty_driver, &ip2_ops);
+	ip2_tty_driver->flags                |= TTY_DRIVER_HAS_GET_ICOUNT;
 
 	ip2trace(ITRC_NO_PORT, ITRC_INIT, 3, 0);
 
diff --git a/drivers/char/mxser.c b/drivers/char/mxser.c
index 4b97406..17a7e14 100644
--- a/drivers/char/mxser.c
+++ b/drivers/char/mxser.c
@@ -2710,6 +2710,7 @@ static int __init mxser_module_init(void)
 	mxvar_sdriver->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 	mxvar_sdriver->flags = TTY_DRIVER_REAL_RAW|TTY_DRIVER_DYNAMIC_DEV;
 	tty_set_operations(mxvar_sdriver, &mxser_ops);
+	mxvar_sdriver->flags |= TTY_DRIVER_HAS_GET_ICOUNT;
 
 	retval = tty_register_driver(mxvar_sdriver);
 	if (retval) {
diff --git a/drivers/char/nozomi.c b/drivers/char/nozomi.c
index 19b3e1d..d3a21fb 100644
--- a/drivers/char/nozomi.c
+++ b/drivers/char/nozomi.c
@@ -1927,6 +1927,7 @@ static __init int nozomi_init(void)
 	ntty_driver->init_termios.c_ispeed = 115200;
 	ntty_driver->init_termios.c_ospeed = 115200;
 	tty_set_operations(ntty_driver, &tty_ops);
+	ntty_driver->flags |= TTY_DRIVER_HAS_GET_ICOUNT;
 
 	ret = tty_register_driver(ntty_driver);
 	if (ret) {
diff --git a/drivers/char/pcmcia/synclink_cs.c b/drivers/char/pcmcia/synclink_cs.c
index 55ae376..ea52c8c 100644
--- a/drivers/char/pcmcia/synclink_cs.c
+++ b/drivers/char/pcmcia/synclink_cs.c
@@ -2916,6 +2916,7 @@ static int __init synclink_cs_init(void)
 	    B9600 | CS8 | CREAD | HUPCL | CLOCAL;
     serial_driver->flags = TTY_DRIVER_REAL_RAW;
     tty_set_operations(serial_driver, &mgslpc_ops);
+    serial_driver->flags |= TTY_DRIVER_HAS_GET_ICOUNT;
 
     if ((rc = tty_register_driver(serial_driver)) < 0) {
 	    printk("%s(%d):Couldn't register serial driver\n",
diff --git a/drivers/char/synclink.c b/drivers/char/synclink.c
index b118959..399eaf5 100644
--- a/drivers/char/synclink.c
+++ b/drivers/char/synclink.c
@@ -4348,6 +4348,7 @@ static int mgsl_init_tty(void)
 	serial_driver->init_termios.c_ospeed = 9600;
 	serial_driver->flags = TTY_DRIVER_REAL_RAW;
 	tty_set_operations(serial_driver, &mgsl_ops);
+	serial_driver->flags |= TTY_DRIVER_HAS_GET_ICOUNT;
 	if ((rc = tty_register_driver(serial_driver)) < 0) {
 		printk("%s(%d):Couldn't register serial driver\n",
 			__FILE__,__LINE__);
diff --git a/drivers/char/synclink_gt.c b/drivers/char/synclink_gt.c
index c300ff6..1d131ef 100644
--- a/drivers/char/synclink_gt.c
+++ b/drivers/char/synclink_gt.c
@@ -3717,6 +3717,7 @@ static int __init slgt_init(void)
 	serial_driver->init_termios.c_ospeed = 9600;
 	serial_driver->flags = TTY_DRIVER_REAL_RAW | TTY_DRIVER_DYNAMIC_DEV;
 	tty_set_operations(serial_driver, &ops);
+	serial_driver->flags |= TTY_DRIVER_HAS_GET_ICOUNT;
 	if ((rc = tty_register_driver(serial_driver)) < 0) {
 		DBGERR(("%s can't register serial driver\n", driver_name));
 		put_tty_driver(serial_driver);
diff --git a/drivers/char/synclinkmp.c b/drivers/char/synclinkmp.c
index 951b65f..676641a 100644
--- a/drivers/char/synclinkmp.c
+++ b/drivers/char/synclinkmp.c
@@ -3991,6 +3991,7 @@ static int __init synclinkmp_init(void)
 	serial_driver->init_termios.c_ospeed = 9600;
 	serial_driver->flags = TTY_DRIVER_REAL_RAW;
 	tty_set_operations(serial_driver, &ops);
+	serial_driver->flags |= TTY_DRIVER_HAS_GET_ICOUNT;
 	if ((rc = tty_register_driver(serial_driver)) < 0) {
 		printk("%s(%d):Couldn't register serial driver\n",
 			__FILE__,__LINE__);
diff --git a/drivers/char/tty_io.c b/drivers/char/tty_io.c
index 123cedf..7466ea8 100644
--- a/drivers/char/tty_io.c
+++ b/drivers/char/tty_io.c
@@ -2442,7 +2442,8 @@ static int tty_tiocgicount(struct tty_struct *tty, void __user *arg)
 	int retval = -EINVAL;
 	struct serial_icounter_struct icount;
 	memset(&icount, 0, sizeof(icount));
-	if (tty->ops->get_icount)
+	if (tty->driver->flags & TTY_DRIVER_HAS_GET_ICOUNT &&
+	    tty->ops->get_icount)
 		retval = tty->ops->get_icount(tty, &icount);
 	if (retval != 0)
 		return retval;
diff --git a/drivers/serial/68360serial.c b/drivers/serial/68360serial.c
index 1e4f831..e843b90 100644
--- a/drivers/serial/68360serial.c
+++ b/drivers/serial/68360serial.c
@@ -2461,6 +2461,7 @@ static int __init rs_360_init(void)
 	serial_driver->init_termios.c_cflag =
 		baud_idx | CS8 | CREAD | HUPCL | CLOCAL;
 	serial_driver->flags = TTY_DRIVER_REAL_RAW;
+	serial_driver->flags |= TTY_DRIVER_HAS_GET_ICOUNT;
 	tty_set_operations(serial_driver, &rs_360_ops);
 	
 	if (tty_register_driver(serial_driver))
diff --git a/drivers/usb/serial/usb-serial.c b/drivers/usb/serial/usb-serial.c
index f23f3b4..bd3fa7f 100644
--- a/drivers/usb/serial/usb-serial.c
+++ b/drivers/usb/serial/usb-serial.c
@@ -562,18 +562,6 @@ static int serial_tiocmset(struct tty_struct *tty, struct file *file,
 	return -EINVAL;
 }
 
-static int serial_get_icount(struct tty_struct *tty,
-				struct serial_icounter_struct *icount)
-{
-	struct usb_serial_port *port = tty->driver_data;
-
-	dbg("%s - port %d", __func__, port->number);
-
-	if (port->serial->type->get_icount)
-		return port->serial->type->get_icount(tty, icount);
-	return -EINVAL;
-}
-
 /*
  * We would be calling tty_wakeup here, but unfortunately some line
  * disciplines have an annoying habit of calling tty->write from
@@ -1226,7 +1214,6 @@ static const struct tty_operations serial_ops = {
 	.chars_in_buffer =	serial_chars_in_buffer,
 	.tiocmget =		serial_tiocmget,
 	.tiocmset =		serial_tiocmset,
-	.get_icount = 		serial_get_icount,
 	.cleanup = 		serial_cleanup,
 	.install = 		serial_install,
 	.proc_fops =		&serial_proc_fops,
diff --git a/include/linux/tty_driver.h b/include/linux/tty_driver.h
index db2d227..177d9e4 100644
--- a/include/linux/tty_driver.h
+++ b/include/linux/tty_driver.h
@@ -275,14 +275,16 @@ struct tty_operations {
 			unsigned int set, unsigned int clear);
 	int (*resize)(struct tty_struct *tty, struct winsize *ws);
 	int (*set_termiox)(struct tty_struct *tty, struct termiox *tnew);
-	int (*get_icount)(struct tty_struct *tty,
-				struct serial_icounter_struct *icount);
 #ifdef CONFIG_CONSOLE_POLL
 	int (*poll_init)(struct tty_driver *driver, int line, char *options);
 	int (*poll_get_char)(struct tty_driver *driver, int line);
 	void (*poll_put_char)(struct tty_driver *driver, int line, char ch);
 #endif
 	const struct file_operations *proc_fops;
+#ifndef __GENKSYMS__
+	int (*get_icount)(struct tty_struct *tty,
+				struct serial_icounter_struct *icount);
+#endif
 };
 
 struct tty_driver {
@@ -374,6 +376,9 @@ static inline struct tty_driver *tty_driver_kref_get(struct tty_driver *d)
  *	the requested timeout to the caller instead of using a simple
  *	on/off interface.
  *
+ * TTY_DRIVER_HAS_GET_ICOUNT -- indicates whether ops->get_icount is
+ *	valid (Debian ABI backward-compatibility)
+ *
  */
 #define TTY_DRIVER_INSTALLED		0x0001
 #define TTY_DRIVER_RESET_TERMIOS	0x0002
@@ -381,6 +386,7 @@ static inline struct tty_driver *tty_driver_kref_get(struct tty_driver *d)
 #define TTY_DRIVER_DYNAMIC_DEV		0x0008
 #define TTY_DRIVER_DEVPTS_MEM		0x0010
 #define TTY_DRIVER_HARDWARE_BREAK	0x0020
+#define TTY_DRIVER_HAS_GET_ICOUNT	0x0040
 
 /* tty driver types */
 #define TTY_DRIVER_TYPE_SYSTEM		0x0001
diff --git a/include/linux/usb/serial.h b/include/linux/usb/serial.h
index 7a159e1..ce911eb 100644
--- a/include/linux/usb/serial.h
+++ b/include/linux/usb/serial.h
@@ -259,8 +259,6 @@ struct usb_serial_driver {
 	int  (*tiocmget)(struct tty_struct *tty, struct file *file);
 	int  (*tiocmset)(struct tty_struct *tty, struct file *file,
 			 unsigned int set, unsigned int clear);
-	int  (*get_icount)(struct tty_struct *tty,
-			struct serial_icounter_struct *icount);
 	/* Called by the tty layer for port level work. There may or may not
 	   be an attached tty at this point */
 	void (*dtr_rts)(struct usb_serial_port *port, int on);
-- 
1.7.2.3

