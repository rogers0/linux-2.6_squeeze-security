commit bba14de98753cb6599a2dae0e520714b2153522d
Author: Eric Dumazet <eric.dumazet@gmail.com>
Date:   Tue Nov 23 14:09:15 2010 +0000

    scm: lower SCM_MAX_FD
    
    Lower SCM_MAX_FD from 255 to 253 so that allocations for scm_fp_list are
    halved. (commit f8d570a4 added two pointers in this structure)
    
    scm_fp_dup() should not copy whole structure (and trigger kmemcheck
    warnings), but only the used part. While we are at it, only allocate
    needed size.
    
    Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [dannf: Adjusted to apply to Debian's 2.6.32]

diff -urpN linux-source-2.6.32.orig/include/net/scm.h linux-source-2.6.32/include/net/scm.h
--- linux-source-2.6.32.orig/include/net/scm.h	2009-12-02 20:51:21.000000000 -0700
+++ linux-source-2.6.32/include/net/scm.h	2011-01-02 22:09:08.709432603 -0700
@@ -10,12 +10,13 @@
 /* Well, we should have at least one descriptor open
  * to accept passed FDs 8)
  */
-#define SCM_MAX_FD	255
+#define SCM_MAX_FD	253
 
 struct scm_fp_list
 {
 	struct list_head	list;
-	int			count;
+	short			count;
+	short			max;
 	struct file		*fp[SCM_MAX_FD];
 };
 
diff -urpN linux-source-2.6.32.orig/net/core/scm.c linux-source-2.6.32/net/core/scm.c
--- linux-source-2.6.32.orig/net/core/scm.c	2010-12-09 23:02:25.000000000 -0700
+++ linux-source-2.6.32/net/core/scm.c	2011-01-02 22:08:18.945434144 -0700
@@ -78,10 +78,11 @@ static int scm_fp_copy(struct cmsghdr *c
 			return -ENOMEM;
 		*fplp = fpl;
 		fpl->count = 0;
+		fpl->max = SCM_MAX_FD;
 	}
 	fpp = &fpl->fp[fpl->count];
 
-	if (fpl->count + num > SCM_MAX_FD)
+	if (fpl->count + num > fpl->max)
 		return -EINVAL;
 
 	/*
@@ -302,11 +303,12 @@ struct scm_fp_list *scm_fp_dup(struct sc
 	if (!fpl)
 		return NULL;
 
-	new_fpl = kmalloc(sizeof(*fpl), GFP_KERNEL);
+	new_fpl = kmemdup(fpl, offsetof(struct scm_fp_list, fp[fpl->count]),
+			  GFP_KERNEL);
 	if (new_fpl) {
-		for (i=fpl->count-1; i>=0; i--)
+		for (i = 0; i < fpl->count; i++)
 			get_file(fpl->fp[i]);
-		memcpy(new_fpl, fpl, sizeof(*fpl));
+		new_fpl->max = new_fpl->count;
 	}
 	return new_fpl;
 }
