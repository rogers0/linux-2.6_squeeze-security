From patchwork Fri Mar 22 19:14:07 2013
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Subject: KVM: x86: relax MSR_KVM_SYSTEM_TIME alignment check
Date: Fri, 22 Mar 2013 19:14:07 -0000
From: Marcelo Tosatti <mtosatti@redhat.com>
X-Patchwork-Id: 2322271
Message-Id: <20130322191407.GA23681@amt.cnet>
To: Andy Honig <ahonig@google.com>, Gleb Natapov <gleb@redhat.com>
Cc: kvm <kvm@vger.kernel.org>

RHEL5 i386 guests register non 32-byte aligned addresses:

kvm-clock: cpu 1, msr 0:3018aa5, secondary cpu clock
kvm-clock: cpu 2, msr 0:301f8e9, secondary cpu clock
kvm-clock: cpu 3, msr 0:302672d, secondary cpu clock

Check for an address+len that would cross page boundary
instead.

Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
[dannf: backported to Debian's 2.6.32]

---
To unsubscribe from this list: send the line "unsubscribe kvm" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

diff -urpN a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
--- a/arch/x86/kvm/x86.c	2013-05-01 00:47:50.631379119 -0400
+++ b/arch/x86/kvm/x86.c	2013-05-01 01:17:49.994373990 -0400
@@ -957,9 +957,10 @@ int kvm_set_msr_common(struct kvm_vcpu *
 		/* ...but clean it before doing the actual write */
 		vcpu->arch.time_offset = data & ~(PAGE_MASK | 1);
 
-		/* Check that the address is 32-byte aligned. */
-		if (vcpu->arch.time_offset &
-				(sizeof(struct pvclock_vcpu_time_info) - 1))
+		/* Check that address+len does not cross page boundary */
+		if ((vcpu->arch.time_offset + 
+			sizeof(struct pvclock_vcpu_time_info) - 1)
+			& PAGE_MASK)
 			break;
 
 		vcpu->arch.time_page =
