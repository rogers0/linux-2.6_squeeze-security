From: Ben Hutchings <ben@decadent.org.uk>
Date: Fri, 30 Jan 2015 01:36:53 +0000
Subject: x86, fpu: Avoid ABI change for addition of has_fpu flag
Forwarded: not-needed

Move it from struct thread_struct (which is embedded in struct
task_struct) to the end of struct task_struct, and hide it from
genksyms.
---
 arch/x86/include/asm/i387.h      | 6 +++---
 arch/x86/include/asm/processor.h | 1 -
 arch/x86/kernel/traps.c          | 4 ++--
 include/linux/sched.h            | 3 +++
 4 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/arch/x86/include/asm/i387.h b/arch/x86/include/asm/i387.h
index 8408250..84ebc56 100644
--- a/arch/x86/include/asm/i387.h
+++ b/arch/x86/include/asm/i387.h
@@ -228,19 +228,19 @@ static inline int restore_fpu_checking(struct task_struct *tsk)
  */
 static inline int __thread_has_fpu(struct task_struct *tsk)
 {
-	return tsk->thread.has_fpu;
+	return tsk->thread_has_fpu;
 }
 
 /* Must be paired with an 'stts' after! */
 static inline void __thread_clear_has_fpu(struct task_struct *tsk)
 {
-	tsk->thread.has_fpu = 0;
+	tsk->thread_has_fpu = 0;
 }
 
 /* Must be paired with a 'clts' before! */
 static inline void __thread_set_has_fpu(struct task_struct *tsk)
 {
-	tsk->thread.has_fpu = 1;
+	tsk->thread_has_fpu = 1;
 }
 
 /*
diff --git a/arch/x86/include/asm/processor.h b/arch/x86/include/asm/processor.h
index 45bc73b..fa04dea 100644
--- a/arch/x86/include/asm/processor.h
+++ b/arch/x86/include/asm/processor.h
@@ -456,7 +456,6 @@ struct thread_struct {
 	unsigned long		error_code;
 	/* floating point and extended processor state */
 	union thread_xstate	*xstate;
-	unsigned long		has_fpu;
 #ifdef CONFIG_X86_32
 	/* Virtual 86 mode info */
 	struct vm86_struct __user *vm86_info;
diff --git a/arch/x86/kernel/traps.c b/arch/x86/kernel/traps.c
index a31c42e..1f2d259 100644
--- a/arch/x86/kernel/traps.c
+++ b/arch/x86/kernel/traps.c
@@ -840,8 +840,8 @@ asmlinkage void __attribute__((weak)) smp_threshold_interrupt(void)
 void __math_state_restore(struct task_struct *tsk)
 {
 	/* We need a safe address that is cheap to find and that is already
-	   in L1. We've just brought in "tsk->thread.has_fpu", so use that */
-#define safe_address (tsk->thread.has_fpu)
+	   in L1. We've just brought in "tsk->thread_has_fpu", so use that */
+#define safe_address (tsk->thread_has_fpu)
 
 	/* AMD K7/K8 CPUs don't save/restore FDP/FIP/FOP unless an exception
 	   is pending.  Clear the x87 state here by setting it to fixed
diff --git a/include/linux/sched.h b/include/linux/sched.h
index 56e1771..68de3a0 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -1599,6 +1599,9 @@ struct task_struct {
 	unsigned long trace_recursion;
 #endif /* CONFIG_TRACING */
 	unsigned long stack_start;
+#ifndef __GENKSYMS__
+	unsigned long thread_has_fpu;
+#endif
 };
 
 /* Future-safe accessor for struct task_struct's cpus_allowed. */
