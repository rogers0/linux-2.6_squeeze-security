From 9f3a8c830bd06bbcd9e0ac51d9e1c25f73299742 Mon Sep 17 00:00:00 2001
From: Ben Hutchings <ben@decadent.org.uk>
Date: Thu, 29 Jan 2015 22:48:16 +0000
Subject: [PATCH 01/15] x86, fpu: Move most of __save_init_fpu() into
 fpu_save_init()

Move everything except the clearing of TS_USEDFPU into a
separate function.

This was done upstream when struct fpu was introduced in commit
86603283326c ("x86: Introduce 'struct fpu' and related API").  It is
only needed here to ease cherry-picking of later fixes.

Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
---
 arch/x86/include/asm/i387.h | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/arch/x86/include/asm/i387.h b/arch/x86/include/asm/i387.h
index cb42fad..d5690c2 100644
--- a/arch/x86/include/asm/i387.h
+++ b/arch/x86/include/asm/i387.h
@@ -152,7 +152,7 @@ static inline void fxsave(struct task_struct *tsk)
 #endif
 }
 
-static inline void __save_init_fpu(struct task_struct *tsk)
+static inline void fpu_save_init(struct task_struct *tsk)
 {
 	if (task_thread_info(tsk)->status & TS_XSAVE)
 		xsave(tsk);
@@ -160,7 +160,6 @@ static inline void __save_init_fpu(struct task_struct *tsk)
 		fxsave(tsk);
 
 	clear_fpu_state(tsk);
-	task_thread_info(tsk)->status &= ~TS_USEDFPU;
 }
 
 #else  /* CONFIG_X86_32 */
@@ -206,7 +205,7 @@ static inline int fxrstor_checking(struct i387_fxsave_struct *fx)
 /*
  * These must be called with preempt disabled
  */
-static inline void __save_init_fpu(struct task_struct *tsk)
+static inline void fpu_save_init(struct task_struct *tsk)
 {
 	if (task_thread_info(tsk)->status & TS_XSAVE) {
 		struct xsave_struct *xstate = &tsk->thread.xstate->xsave;
@@ -250,11 +249,17 @@ clear_state:
 			: : [addr] "m" (safe_address));
 	}
 end:
-	task_thread_info(tsk)->status &= ~TS_USEDFPU;
+	;
 }
 
 #endif	/* CONFIG_X86_64 */
 
+static inline void __save_init_fpu(struct task_struct *tsk)
+{
+	fpu_save_init(tsk);
+	task_thread_info(tsk)->status &= ~TS_USEDFPU;
+}
+
 static inline int restore_fpu_checking(struct task_struct *tsk)
 {
 	if (task_thread_info(tsk)->status & TS_XSAVE)
