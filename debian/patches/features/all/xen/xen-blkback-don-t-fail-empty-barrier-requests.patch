commit 25266338a41470a21e9b3974445be09e0640dda7
Author: Jan Beulich <JBeulich@novell.com>
Date:   Tue May 17 11:07:05 2011 +0100

    xen/blkback: don't fail empty barrier requests
    
    The sector number on empty barrier requests may (will?) be -1, which,
    given that it's being treated as unsigned 64-bit quantity, will almost
    always exceed the actual (virtual) disk's size.
    
    Inspired by Konrad's "When writting barriers set the sector number to
    zero...".
    
    While at it also add overflow checking to the math in vbd_translate().
    
    [ Manually cherrypicked from 8ab521506c4dbb144f0c04c55e3d8bec42c1b2b9 -J ]
    
    Signed-off-by: Jan Beulich <jbeulich@novell.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>

diff --git a/drivers/xen/blkback/vbd.c b/drivers/xen/blkback/vbd.c
index 943ec23..6e0abcc 100644
--- a/drivers/xen/blkback/vbd.c
+++ b/drivers/xen/blkback/vbd.c
@@ -107,8 +107,14 @@ int vbd_translate(struct phys_req *req, blkif_t *blkif, int operation)
 	if ((operation != READ) && vbd->readonly)
 		goto out;
 
-	if (unlikely((req->sector_number + req->nr_sects) > vbd_sz(vbd)))
-		goto out;
+	if (likely(req->nr_sects)) {
+		blkif_sector_t end = req->sector_number + req->nr_sects;
+
+		if (unlikely(end < req->sector_number))
+			goto out;
+		if (unlikely(end > vbd_sz(vbd)))
+			goto out;
+	}
 
 	req->dev  = vbd->pdevice;
 	req->bdev = vbd->bdev;
