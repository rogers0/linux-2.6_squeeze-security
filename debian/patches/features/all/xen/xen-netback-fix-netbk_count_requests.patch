# HG changeset patch
# User Wei Liu <wei.liu2@citrix.com>
# Date 1360918293 -3600
# Node ID a56b12b91c25fc922ce7eee18fb4576b23e5fdb6
# Parent  d732224ce60e45cc43337be0061a20f8ed65e03e
netback: fix netbk_count_requests()

There are two paths in the original code, a) test against work_to_do, b) test
against first->size, could return 0 even when error happens.

Simply return -1 in error paths should work. Modify all error paths to return
-1 to be consistent.

Reported-by: Christopher S. Aker <caker@theshore.net>
Signed-off-by: Wei Liu <wei.liu2@citrix.com>

Use distinct -E... values instead.

Signed-off-by: Jan Beulich <jbeulich@suse.com>
Acked-by: Ian Campbell <ian.campbell@citrix.com>
Committed-by: Jan Beulich <jbeulich@suse.com>

diff -r d732224ce60e -r a56b12b91c25 drivers/xen/netback/netback.c
--- a/drivers/xen/netback/netback.c	Tue Feb 05 10:26:53 2013 +0100
+++ b/drivers/xen/netback/netback.c	Fri Feb 15 09:51:33 2013 +0100
@@ -1042,14 +1042,14 @@ static int netbk_count_requests(netif_t 
 			printk(KERN_ERR "%s: Need more frags\n",
 			       netif->dev->name);
 			netbk_fatal_tx_err(netif);
-			return -frags;
+			return -ENODATA;
 		}
 
 		if (unlikely(frags >= MAX_SKB_FRAGS)) {
 			printk(KERN_ERR "%s: Too many frags\n",
 			       netif->dev->name);
 			netbk_fatal_tx_err(netif);
-			return -frags;
+			return -E2BIG;
 		}
 
 		memcpy(txp, RING_GET_REQUEST(&netif->tx, cons + frags),
@@ -1058,7 +1058,7 @@ static int netbk_count_requests(netif_t 
 			printk(KERN_ERR "%s: Frag is bigger than frame.\n",
 			       netif->dev->name);
 			netbk_fatal_tx_err(netif);
-			return -frags;
+			return -EIO;
 		}
 
 		first->size -= txp->size;
@@ -1068,7 +1068,7 @@ static int netbk_count_requests(netif_t 
 			printk(KERN_ERR "%s: txp->offset: %x, size: %u\n",
 			       netif->dev->name, txp->offset, txp->size);
 			netbk_fatal_tx_err(netif);
-			return -frags;
+			return -EINVAL;
 		}
 	} while ((txp++)->flags & NETTXF_more_data);
 
