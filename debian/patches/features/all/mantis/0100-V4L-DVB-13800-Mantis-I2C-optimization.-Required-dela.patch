From da09e1f2f9a261045f6ebef4f42ad4b6db324846 Mon Sep 17 00:00:00 2001
From: Manu Abraham <abraham.manu@gmail.com>
Date: Fri, 4 Dec 2009 09:02:00 -0300
Subject: [PATCH 100/120] V4L/DVB (13800): [Mantis] I2C optimization. Required delay is much lesser than 1mS.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Do not wait, keep looping instead.

Signed-off-by: Manu Abraham <manu@linuxtv.org>
Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
(cherry picked from commit 281859179f731b28aae78d13b2e8720219492000)

Signed-off-by: Bj√∏rn Mork <bjorn@mork.no>
---
 drivers/media/dvb/mantis/mantis_i2c.c |    5 -----
 1 files changed, 0 insertions(+), 5 deletions(-)

diff --git a/drivers/media/dvb/mantis/mantis_i2c.c b/drivers/media/dvb/mantis/mantis_i2c.c
index 758f32a..9d2b51d 100644
--- a/drivers/media/dvb/mantis/mantis_i2c.c
+++ b/drivers/media/dvb/mantis/mantis_i2c.c
@@ -58,7 +58,6 @@ static int mantis_i2c_read(struct mantis_pci *mantis, const struct i2c_msg *msg)
 
 		/* wait for xfer completion */
 		for (trials = 0; trials < TRIALS; trials++) {
-			msleep(1);
 			stat = mmread(MANTIS_INT_STAT);
 			if (stat & MANTIS_INT_I2CDONE)
 				break;
@@ -71,7 +70,6 @@ static int mantis_i2c_read(struct mantis_pci *mantis, const struct i2c_msg *msg)
 			stat = mmread(MANTIS_INT_STAT);
 			if (stat & MANTIS_INT_I2CRACK)
 				break;
-			msleep(1);
 		}
 
 		dprintk(MANTIS_TMG, 0, "I2CRACK: trials=%d\n", trials);
@@ -108,7 +106,6 @@ static int mantis_i2c_write(struct mantis_pci *mantis, const struct i2c_msg *msg
 
 		/* wait for xfer completion */
 		for (trials = 0; trials < TRIALS; trials++) {
-			msleep(1);
 			stat = mmread(MANTIS_INT_STAT);
 			if (stat & MANTIS_INT_I2CDONE)
 				break;
@@ -121,7 +118,6 @@ static int mantis_i2c_write(struct mantis_pci *mantis, const struct i2c_msg *msg
 			stat = mmread(MANTIS_INT_STAT);
 			if (stat & MANTIS_INT_I2CRACK)
 				break;
-			msleep(1);
 		}
 
 		dprintk(MANTIS_TMG, 0, "I2CRACK: trials=%d\n", trials);
@@ -164,7 +160,6 @@ static int mantis_i2c_xfer(struct i2c_adapter *adapter, struct i2c_msg *msgs, in
 			mmwrite(txd, MANTIS_I2CDATA_CTL);
 			/* wait for xfer completion */
 			for (trials = 0; trials < TRIALS; trials++) {
-				msleep(1);
 				stat = mmread(MANTIS_INT_STAT);
 				if (stat & MANTIS_INT_I2CDONE)
 					break;
-- 
1.7.1

